# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'des.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import math
import numpy as np
from pyqtgraph import PlotWidget
from PyQt5 import QtCore, QtGui, QtWidgets, Qt
from PyQt5.QtWidgets import QTableWidgetItem, QFileDialog, QTextEdit, QAction, QLabel, QPushButton
import subprocess
import time
from scipy.interpolate import make_interp_spline, BSpline
from scipy.ndimage.filters import gaussian_filter1d

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1067, 797)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 0, 1041, 781))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.tabWidget.setFont(font)
        self.tabWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.comboBox = QtWidgets.QComboBox(self.tab_6)
        self.comboBox.setGeometry(QtCore.QRect(490, 440, 411, 41))
        self.comboBox.setObjectName("comboBox")
        self.pushButton = QtWidgets.QPushButton(self.tab_6)
        self.pushButton.setGeometry(QtCore.QRect(40, 120, 311, 51))
        self.pushButton.setObjectName("pushButton")
        self.textEdit_3 = QtWidgets.QTextEdit(self.tab_6)
        self.textEdit_3.setGeometry(QtCore.QRect(490, 100, 411, 87))
        self.textEdit_3.setObjectName("textEdit_3")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_6)
        self.pushButton_2.setGeometry(QtCore.QRect(40, 300, 311, 51))
        self.pushButton_2.setObjectName("pushButton_2")
        self.textEdit_4 = QtWidgets.QTextEdit(self.tab_6)
        self.textEdit_4.setGeometry(QtCore.QRect(490, 286, 411, 101))
        self.textEdit_4.setObjectName("textEdit_4")
        self.label_3 = QtWidgets.QLabel(self.tab_6)
        self.label_3.setGeometry(QtCore.QRect(40, 440, 301, 41))
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.tab_6)
        self.label_4.setGeometry(QtCore.QRect(240, 530, 401, 191))
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.tabWidget.addTab(self.tab_6, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.label = QtWidgets.QLabel(self.tab)
        self.label.setGeometry(QtCore.QRect(340, 20, 311, 31))
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setGeometry(QtCore.QRect(10, 60, 981, 301))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setRowCount(18)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        item.setText("Атрибут")
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(False)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(5, 0, item)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(True)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(460)
        with open('test.txt', 'wb', 0) as file: # оценка состояния диска
            p = subprocess.Popen(
                r'c:\windows\system32\cmd.exe /C "C:\Program Files\smartmontools\bin\runcmdu.exe" smartctl -x sda',
                stdout=file)
            try:
                p.wait(timeout=5)
            except:
                p.kill()
        f = open('test.txt', 'r')
        w = 0
        q = 0
        for line in f:
            q += 1
            if 7 <= q <= 25:
                r = line.split(':', 1)
                a = r[0]
                b = r[1]
                b1 = ''
                self.tableWidget.setItem(w, 0, QTableWidgetItem(a))
                for j in range(len(b)):
                    if b[j] == ' ':
                        b1 = b[j:]
                    else:
                        break
                self.tableWidget.setItem(w, 1, QTableWidgetItem(b1))
                w += 1
        f.close()
        self.label_2 = QtWidgets.QLabel(self.tab)
        self.label_2.setGeometry(QtCore.QRect(320, 390, 311, 31))
        self.label_2.setScaledContents(False)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.textEdit = QtWidgets.QTextEdit(self.tab)
        self.textEdit.setGeometry(QtCore.QRect(10, 430, 981, 281))
        self.textEdit.setObjectName("textEdit")
        with open('testd.txt', 'wb', 0) as file:
            subprocess.Popen(r'c:\windows\system32\cmd.exe /C chcp 65001')
            subprocess.Popen(r'c:\windows\system32\cmd.exe /C chkdsk d:', stdout=file)
        time.sleep(15)
        f = open('testd.txt', 'r')
        q = 0
        k = ''
        t = False
        for line in f:
            q += 1
            if q == 1:
                k = k + line
            if 'total disk space' in line:
                t = True
            if t:
                l1 = ''
                for j in range(len(line)):
                    if line[j] == ' ':
                        l1 = line[j:]
                    else:
                        break
                k = k + l1
        f.close()
        self.textEdit.setText(k)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_2.sizePolicy().hasHeightForWidth())
        self.tab_2.setSizePolicy(sizePolicy)
        self.tab_2.setObjectName("tab_2")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.tab_2)
        self.tabWidget_2.setGeometry(QtCore.QRect(10, 20, 971, 721))
        self.tabWidget_2.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.tabWidget_2.setFocusPolicy(QtCore.Qt.TabFocus)
        self.tabWidget_2.setAcceptDrops(False)
        self.tabWidget_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tabWidget_2.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget_2.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget_2.setIconSize(QtCore.QSize(20, 25))
        self.tabWidget_2.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget_2.setDocumentMode(False)
        self.tabWidget_2.setTabsClosable(False)
        self.tabWidget_2.setMovable(False)
        self.tabWidget_2.setTabBarAutoHide(False)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_4 = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_4.sizePolicy().hasHeightForWidth())
        self.tab_4.setSizePolicy(sizePolicy)
        self.tab_4.setInputMethodHints(QtCore.Qt.ImhNone)
        self.tab_4.setObjectName("tab_4")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.tab_4)
        self.tableWidget_2.setGeometry(QtCore.QRect(20, 30, 941, 511))
        self.tableWidget_2.setStyleSheet("")
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(2)
        self.tableWidget_2.setRowCount(18)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        item.setText("Атрибут")
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(False)
        item.setFont(font)
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(5, 0, item)
        self.tableWidget_2.horizontalHeader().setCascadingSectionResizes(True)
        self.tableWidget_2.horizontalHeader().setDefaultSectionSize(440)
        f = open('test.txt', 'r') # оценка состояния диска
        w = 0
        q = 0
        t = False
        for line in f:
            q += 1
            if 'Critical Warning' in line:
                t = True
            if t and q <= 62:
                r = line.split(':', 1)
                a = r[0]
                b = r[1]
                b1 = ''
                self.tableWidget_2.setItem(w, 0, QTableWidgetItem(a))
                for j in range(len(b)):
                    if b[j] == ' ':
                        b1 = b[j:]
                    else:
                        break
                self.tableWidget_2.setItem(w, 1, QTableWidgetItem(b1))
                w += 1
        f.close()
        self.textEdit_2 = QtWidgets.QTextEdit(self.tab_4)
        self.textEdit_2.setGeometry(QtCore.QRect(20, 560, 941, 87))
        self.textEdit_2.setObjectName("textEdit_2")
        f = open('test.txt', 'r')
        s = ''
        for line in f:
            if 'overall-health' in line:
                s = s + line
            elif 'Error Information (' in line:
                s = s + line
            elif 'Errors Logged' in line:
                s = s + line
        f.close()
        self.textEdit_2.setText(s)
        self.tabWidget_2.addTab(self.tab_4, "")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget_3 = QtWidgets.QTabWidget(self.tab_3)
        self.tabWidget_3.setGeometry(QtCore.QRect(10, 20, 1001, 711))
        self.tabWidget_3.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget_3.setObjectName("tabWidget_3")
        self.tab_8 = QtWidgets.QWidget()
        self.tab_8.setObjectName("tab_8")
        self.pushButton_4 = QtWidgets.QPushButton(self.tab_8)
        self.pushButton_4.setGeometry(QtCore.QRect(380, 50, 201, 51))
        self.pushButton_4.setObjectName("pushButton_4")
        self.textEdit_6 = QtWidgets.QTextEdit(self.tab_8)
        self.textEdit_6.setGeometry(QtCore.QRect(30, 150, 911, 491))
        self.textEdit_6.setObjectName("textEdit_6")
        self.tabWidget_3.addTab(self.tab_8, "")
        self.tab_7 = QtWidgets.QWidget()
        self.tab_7.setObjectName("tab_7")
        self.pushButton_3 = QtWidgets.QPushButton(self.tab_7)
        self.pushButton_3.setGeometry(QtCore.QRect(30, 80, 201, 51))
        self.pushButton_3.setObjectName("pushButton_3")
        self.lineEdit = QtWidgets.QLineEdit(self.tab_7)
        self.lineEdit.setGeometry(QtCore.QRect(340, 80, 601, 51))
        self.lineEdit.setObjectName("lineEdit")
        self.path = None
        self.pushButton_7 = QtWidgets.QPushButton(self.tab_7)
        self.pushButton_7.setGeometry(QtCore.QRect(30, 250, 201, 51))
        self.pushButton_7.setObjectName("pushButton_7")
        self.textEdit_5 = QtWidgets.QTextEdit(self.tab_7)
        self.textEdit_5.setGeometry(QtCore.QRect(30, 486, 911, 151))
        self.textEdit_5.setObjectName("textEdit_5")
        self.graphicsView = PlotWidget(self.tab_7)
        self.graphicsView.setGeometry(QtCore.QRect(340, 180, 601, 271))
        self.graphicsView.setObjectName("graphicsView")
        self.tabWidget_3.addTab(self.tab_7, "")
        self.tabWidget.addTab(self.tab_3, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(3)
        self.tabWidget_2.setCurrentIndex(0)
        self.tabWidget_3.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.add_fs()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "AnomalFS"))
        self.pushButton.setText(_translate("MainWindow", "Определить файловую систему"))
        self.pushButton_2.setText(_translate("MainWindow", "Поиск дисков"))
        self.label_3.setText(_translate("MainWindow", "Выбор диска для проверки:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_6), _translate("MainWindow", "Главная"))
        self.label.setText(_translate("MainWindow", "Информация о жёстком диске"))
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.tableWidget.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.tableWidget.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.tableWidget.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.tableWidget.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.tableWidget.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.tableWidget.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.tableWidget.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.tableWidget.verticalHeaderItem(10)
        item.setText(_translate("MainWindow", "11"))
        item = self.tableWidget.verticalHeaderItem(11)
        item.setText(_translate("MainWindow", "12"))
        item = self.tableWidget.verticalHeaderItem(12)
        item.setText(_translate("MainWindow", "13"))
        item = self.tableWidget.verticalHeaderItem(13)
        item.setText(_translate("MainWindow", "14"))
        item = self.tableWidget.verticalHeaderItem(14)
        item.setText(_translate("MainWindow", "15"))
        item = self.tableWidget.verticalHeaderItem(15)
        item.setText(_translate("MainWindow", "16"))
        item = self.tableWidget.verticalHeaderItem(16)
        item.setText(_translate("MainWindow", "17"))
        item = self.tableWidget.verticalHeaderItem(17)
        item.setText(_translate("MainWindow", "19"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Информация"))
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.label_2.setText(_translate("MainWindow", "Информация о файловой системе"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "О системе"))
        item = self.tableWidget_2.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget_2.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.tableWidget_2.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.tableWidget_2.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget_2.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.tableWidget_2.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "6"))
        item = self.tableWidget_2.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "7"))
        item = self.tableWidget_2.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "8"))
        item = self.tableWidget_2.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "9"))
        item = self.tableWidget_2.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "10"))
        item = self.tableWidget_2.verticalHeaderItem(10)
        item.setText(_translate("MainWindow", "11"))
        item = self.tableWidget_2.verticalHeaderItem(11)
        item.setText(_translate("MainWindow", "12"))
        item = self.tableWidget_2.verticalHeaderItem(12)
        item.setText(_translate("MainWindow", "13"))
        item = self.tableWidget_2.verticalHeaderItem(13)
        item.setText(_translate("MainWindow", "14"))
        item = self.tableWidget_2.verticalHeaderItem(14)
        item.setText(_translate("MainWindow", "15"))
        item = self.tableWidget_2.verticalHeaderItem(15)
        item.setText(_translate("MainWindow", "16"))
        item = self.tableWidget_2.verticalHeaderItem(16)
        item.setText(_translate("MainWindow", "17"))
        item = self.tableWidget_2.verticalHeaderItem(17)
        item.setText(_translate("MainWindow", "19"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Информация"))
        __sortingEnabled = self.tableWidget_2.isSortingEnabled()
        self.tableWidget_2.setSortingEnabled(False)
        self.tableWidget_2.setSortingEnabled(__sortingEnabled)
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4), _translate("MainWindow", "Сканирование состояния диска"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Мониторинг состояния жесткого диска"))
        self.pushButton_3.setText(_translate("MainWindow", "Открыть файл"))
        self.pushButton_7.setText(_translate("MainWindow", "Построить график"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_7), _translate("MainWindow", "Проверка энтропии файла"))
        self.pushButton_4.setText(_translate("MainWindow", "Сканировать"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_8), _translate("MainWindow", "Сканирование файловой системы"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Анализ состояния файловой системы"))


    def showDialog(self): # оценка энтропии файла
        fname = QFileDialog.getOpenFileName(self, 'Open file', 'home')[0]
        self.lineEdit.setText(fname)
        with open(fname, 'rb') as f:
            byteArr = list(f.read())
            fileSize = len(byteArr)
            entropY = []
            entropX = []
            self.textEdit_5.setText('Размер файла в байтах: {}'.format(fileSize))
            freqList = []
            for b in range(256):
                ctr = 0
                for byte in byteArr:
                    if byte == b:
                        ctr += 1
                freqList.append(float(ctr) / fileSize)
            ent = 0.0
            t = ''
            for freq in freqList:
                if freq > 0:
                    ent = ent + freq * math.log(freq, 2)
            ent = -ent
            if ent > 7:
                t = 'Файл запакован'
            else:
                t = 'Файл не запакован'
            k=0
            entI=0
            for byte in byteArr:
                entI = ent + float(freqList[byte]) * math.log(float(freqList[byte]), 2)
                entropX.append(k)
                entropY.append(entI)
                k+=1
            self.textEdit_5.append('Энтропия файла: {}'.format(ent))
            self.textEdit_5.append(t)
            self.pushButton_7.clicked.connect(lambda: self.draw(entropX, entropY))

    def draw(self, x, y): # построение графика энтропии
        X_Y_Spline = make_interp_spline(x, y)
        X_ = np.linspace(min(x), max(x), 300)
        Y_ = X_Y_Spline(X_)
        ysmoothed = gaussian_filter1d(Y_, sigma=2)
        self.graphicsView.clear()
        self.graphicsView.setYRange(0, 8.5, padding=0)
        self.graphicsView.plot(X_, ysmoothed)

    def add_fs(self): # оценка состояния файловой системы

        f = open('testd.txt', 'r')
        s = ''
        for line in f:
            s=line
            break
        f.close()
        self.pushButton.clicked.connect(lambda: self.writefs(s))
        self.pushButton_2.clicked.connect(lambda: self.writed())
        self.pushButton_3.clicked.connect(self.showDialog)
        self.pushButton_4.clicked.connect(self.scan)


    def scan(self): # поиск пакетных и разреженных файлов
        with open('scan.txt', 'wb', 0) as file:
            listcom=['del \*.\*', 'shutdown -r -f -t 00', 'del \*.dll']
            for i in listcom:
                try:
                    subprocess.Popen(r'c:\windows\system32\cmd.exe /C findstr /s /i /c:"'+i+'" d:\*.bat', stdout=file)
                    subprocess.Popen(r'c:\windows\system32\cmd.exe /C findstr /s /i /c:"'+i+'" с:\*.bat', stdout=file)
                except:
                    file.write("Пакетные файлы не обнаружены")


        with open('scanR.txt', 'wb', 0) as file:
            try:
                subprocess.Popen(r'c:\windows\system32\cmd.exe /C forfiles /P D: /S /M *.txt /C "cmd /c if @fsize GEQ 1048576 echo @path"', stdout=file)
            except:
                file.write("Разреженные файлы не обнаружены")
        time.sleep(10)
        self.writ()

    def writ(self):# поиск пакетных и разреженных файлов
        self.textEdit_6.setText('Пакетные файлы:')
        f = open('scan.txt', 'r')
        for line in f:
            if line!='':
                self.textEdit_6.append(line)

        f.close()
        listcom=[]
        w=False
        fil = open('scanR.txt', 'r+')
        for line in fil:
            if line!='Разреженные файлы не обнаружены':
                s=line.translate({ord('"'): None})
                listcom.append(s)
                w=True
        fil.close()
        with open('scanR.txt', 'wb', 0) as file:
            if w:
                for l in listcom:
                    try:
                        subprocess.Popen(r'c:\windows\system32\cmd.exe /C fsutil sparse queryflag '+l, stdout=file)
                    except:
                        file.write("Разреженные файлы не обнаружены")
        time.sleep(5)
        self.spacef(listcom)


    def spacef(self, listcom): # вывод разреженных файлов
        f = open('scanR1.txt', 'r')
        k = 0
        self.textEdit_6.append('Разреженные файлы:')
        for line in f:
            if 'This file' in line:
                if 'NOT' not in line:
                    self.textEdit_6.append(listcom[k])
                k += 1

        if k==0:
            self.textEdit_6.append('Разреженные файлы не обнаружены')

    def writefs(self, t):
        self.textEdit_3.setText(t)

    def writed(self): # поиск дисков
        l=0
        w=''
        k=0
        f = open('countd.txt', 'r')
        for line in f:
            if l>0 and (l % 2)==0:
                w=w+line
                self.comboBox.addItem(line)
                k+=1
            l+=1
        f.close()
        self.comboBox.removeItem((k-1))
        self.comboBox.removeItem((k - 2))
        self.comboBox.removeItem((k - 3))
        self.textEdit_4.setText(w)



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()

    sys.exit(app.exec_())
